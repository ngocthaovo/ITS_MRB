
@using FEA_ITS_Site.Models.Helper
@{
    ViewBag.Title = "GAPushData";
    Layout = "~/Views/Shared/_FEAContentLayout.cshtml";
}

@model Dictionary<string, string>
           
<script type="text/javascript">

    function SelectionChanged(s, e) {
        s.GetSelectedFieldValues("OrderCode;OrderType", GetSelectedFieldValuesCallback);
    }
    function GetSelectedFieldValuesCallback(selectedValues) {
        try {
            var sData = "";
            if (selectedValues.length != 0) {
                for (i = 0; i < selectedValues.length; i++) {
                    var obj = new Object();
                    if (sData.length == 0)
                        sData += "\"" + selectedValues[i][0] + "\"" + ":" + "\"" + "Push" + "\"";
                    else
                        sData += "," + "\"" + selectedValues[i][0] + "\"" + ":" + "\"" + "Push" + "\"";
                }
                sData = "{" + sData + "}";
            }

            $("#mydata").val(sData);
        } finally {
        }
    }
</script>

@Html.DevExpress().GetStyleSheets(
    new StyleSheet{ExtensionSuite = ExtensionSuite.Editors},
    new StyleSheet{ExtensionSuite = ExtensionSuite.GridView})

@Html.DevExpress().GetScripts(
    new Script{ExtensionSuite = ExtensionSuite.Editors},
    new Script{ExtensionSuite = ExtensionSuite.GridView})

@using (Html.BeginForm())
{
    @Html.Hidden("mydata");
       <div class="panel-body">
       
        @{    
                          bool _showPushButton, _showExportButton;
                          _showPushButton = _showExportButton = false;
                          if (Request.QueryString["Type"] == "7")
                          {
                              _showExportButton = true;
                              _showPushButton = false;

                          }
                          else
                          {
                              _showPushButton = true;
                              _showExportButton = false;
                          }
            
        }
       
        <div class="row buttonbar">
            <div class="col-lg-7">
                @Html.DevExpress().Button(
                    settings =>
                    {
                        settings.Name = "btnQuery";
                        settings.Width = 90;
                        settings.Text = @Resources.Resource.Query;
                        settings.UseSubmitBehavior = true;

                    }).GetHtml()
                @Html.DevExpress().Button(
                    settings =>
                    {
                        settings.Name = "btnPush";
                        settings.Width = 90;
                        settings.ClientVisible = _showPushButton;
                        settings.Text = @Resources.Resource.Push;
                        settings.UseSubmitBehavior = true;

                    }).GetHtml()
                @Html.DevExpress().Button(
                    settings =>
                    {
                        settings.Name = "btnExport";
                        settings.Width = 90;
                        settings.RouteValues = new { Action = "ExportToExcelPushData", Controller = "GA" };
                        settings.ClientVisible = _showExportButton;
                        settings.Text = @Resources.Resource.Export;
                        settings.UseSubmitBehavior = true;

                    }).GetHtml()
            </div>
           
        </div>
           <hr />
          @{ if (ViewBag.EditStatus != null)
             { 
           <div class="row">
               <div class="col-md-12">
                  @if (ViewBag.EditStatus.Contains("Push Succecced") == true)
                  {
                      <div id="editError" class="alert-small alert-info" style="margin-top:10px;">
                       @Html.Raw(ViewBag.EditStatus)
                   </div>   
                  }
                  else
                  {
                      <div id="editError" class="alert-small alert-danger" style="margin-top:10px;">
                       @Html.Raw(ViewBag.EditStatus)
                   </div>
                  }
               </div>
           </div>              
             }
          }
        <div class="row">
          
            <div class="col-md-2">
                <label class="control-label">
                    @Resources.Resource.PushMonth:
                </label>
            </div>
            <div class="col-md-2">
                @Html.DevExpress().DateEdit(
                    settings =>
                    {
                        settings.Name = "dtEndDate";
                        settings.Date = ViewBag.EndDate;
                        settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
                        settings.Properties.EditFormat = EditFormat.Custom;
                        settings.Properties.EditFormatString = "yyyy-MM";
                    }
                    ).GetHtml()
            </div>
            <div class="col-md-5">
                <div style="color: blue" >
                    @if (Request.QueryString["Type"] == "7")
                    {
                        @Resources.Resource.QueryStatus
                    }
                    else
                    {
                        @Resources.Resource.PushStatus
                    }
                </div>
            </div>
        </div>
        <hr/>
        @*<h4 class="group-title"><i class="icon-edit-sign teal"></i> @Resources.Resource.PendingList</h4>*@
        <div class="row">
                <div class="col-md-12">
                    <div class="form-group">
                       
                        @{    Html.RenderAction("DocumentGAPushDataPartial", "GA", new { OrderCode = ViewBag.OrderCode, BeginDate = ViewBag.BeginDate, EndDate = ViewBag.EndDate, Status = ViewBag.Status });}
                        
                    </div>
                </div>
            </div>
    </div>
}

